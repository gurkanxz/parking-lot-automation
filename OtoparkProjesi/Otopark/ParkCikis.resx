<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="bunifuElipse1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="bunifuGradientPanel1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>